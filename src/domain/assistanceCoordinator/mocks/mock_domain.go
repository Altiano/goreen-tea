// Code generated by MockGen. DO NOT EDIT.
// Source: domain.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	coModels "gitlab.com/altiano/goreen-tea/src/domain/customerOrder/models"
)

// MockDomain is a mock of Domain interface.
type MockDomain struct {
	ctrl     *gomock.Controller
	recorder *MockDomainMockRecorder
}

// MockDomainMockRecorder is the mock recorder for MockDomain.
type MockDomainMockRecorder struct {
	mock *MockDomain
}

// NewMockDomain creates a new mock instance.
func NewMockDomain(ctrl *gomock.Controller) *MockDomain {
	mock := &MockDomain{ctrl: ctrl}
	mock.recorder = &MockDomainMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDomain) EXPECT() *MockDomainMockRecorder {
	return m.recorder
}

// Assist mocks base method.
func (m *MockDomain) Assist(ctx context.Context, co coModels.CustomerOrder) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Assist", ctx, co)
	ret0, _ := ret[0].(error)
	return ret0
}

// Assist indicates an expected call of Assist.
func (mr *MockDomainMockRecorder) Assist(ctx, co interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Assist", reflect.TypeOf((*MockDomain)(nil).Assist), ctx, co)
}
