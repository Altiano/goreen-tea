// Code generated by MockGen. DO NOT EDIT.
// Source: domain.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	waiterModels "gitlab.com/altiano/goreen-tea/src/domain/waiter/models"
)

// MockDomain is a mock of Domain interface.
type MockDomain struct {
	ctrl     *gomock.Controller
	recorder *MockDomainMockRecorder
}

// MockDomainMockRecorder is the mock recorder for MockDomain.
type MockDomainMockRecorder struct {
	mock *MockDomain
}

// NewMockDomain creates a new mock instance.
func NewMockDomain(ctrl *gomock.Controller) *MockDomain {
	mock := &MockDomain{ctrl: ctrl}
	mock.recorder = &MockDomainMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDomain) EXPECT() *MockDomainMockRecorder {
	return m.recorder
}

// IncreaseTotalServe mocks base method.
func (m *MockDomain) IncreaseTotalServe(ctx context.Context, waiter waiterModels.Waiter) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IncreaseTotalServe", ctx, waiter)
	ret0, _ := ret[0].(error)
	return ret0
}

// IncreaseTotalServe indicates an expected call of IncreaseTotalServe.
func (mr *MockDomainMockRecorder) IncreaseTotalServe(ctx, waiter interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IncreaseTotalServe", reflect.TypeOf((*MockDomain)(nil).IncreaseTotalServe), ctx, waiter)
}

// PickNormalWaiter mocks base method.
func (m *MockDomain) PickNormalWaiter(ctx context.Context) (waiterModels.Waiter, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PickNormalWaiter", ctx)
	ret0, _ := ret[0].(waiterModels.Waiter)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PickNormalWaiter indicates an expected call of PickNormalWaiter.
func (mr *MockDomainMockRecorder) PickNormalWaiter(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PickNormalWaiter", reflect.TypeOf((*MockDomain)(nil).PickNormalWaiter), ctx)
}

// PickTopWaiter mocks base method.
func (m *MockDomain) PickTopWaiter(ctx context.Context) (waiterModels.Waiter, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PickTopWaiter", ctx)
	ret0, _ := ret[0].(waiterModels.Waiter)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PickTopWaiter indicates an expected call of PickTopWaiter.
func (mr *MockDomainMockRecorder) PickTopWaiter(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PickTopWaiter", reflect.TypeOf((*MockDomain)(nil).PickTopWaiter), ctx)
}
